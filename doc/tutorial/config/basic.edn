{:config {:name "Sample Collection"
          :family "Yume Labs"
          :symbol "COLL"
          :url "https://yumelabs.io"
          :description "This is a sample collection by Yume Labs."
          :royalties 500
          :no-twins true
          :creators [{:wallet "Fk3mJaeqYjZucRs3UsGTDxyEm5q5dg39EjRoR4NPK9hM" 
                      :share 100}]
          :twin-outcomes [:background
                          :body-color
                          :secondary-color
                          :eyes
                          :eye-color]
          :size 10
          :assets-format :solana
          :naming {:base "Sample #"
                   :type :autoinc}}
 :base {:layers {:background {:order 0}
                 :body {:order 1 :image [:images :body]}
                 :mouth {:order 2 :image [:images :mouth :smile]}
                 :eyes {:order 3}
                 :secondary {:order 4 :image [:images :secondary]}
                 :overlay {:order 5 :image nil :blend :overlay}
                 :shadows {:order 6 :image [:images :shadows] :color [:colors :shadows] :blend :multiply}
                 :eyes-shadows {:order 7 :color [:colors :shadows] :blend :multiply}
                 :highlights {:order 8 :image [:images :highlights] :color [:colors :highlights] :blend :add}
                 :eyes-highlights {:order 9 :color [:colors :highlights] :blend :add}
                 :eyes-outline {:order 10}
                 :outline {:order 11 :image [:images :outline]}}}
 :pregenerate []
 :decisions [{:name :background
                  :type :random
                  :outcomes [:day :sunset :night]}
                 {:name :body-color
                  :type :random
                  :outcomes [:cream :grey]}
                 {:name :secondary-color
                  :type :random
                  :outcomes [:red :blue :green]}
                 {:name :eyes
                  :type :random
                  :outcomes [:open :closed]}
                 {:name :eye-color
                  :filter (fn (processed) (not (= (:eyes processed) :open)))
                  :type :random
                  :outcomes [:red :blue :green]}
                 {:name :gender
                  :type :random
                  :outcomes [:male :female]}]
 :outcomes {:background {:day [[:attribute "Time" "Day"]
                               [[:layers :background] {:image [:images :background :day]}]]
                         :sunset [[:attribute "Time" "Sunset"]
                                  [[:layers :background] {:image [:images :background :sunset]}]]
                         :night [[:attribute "Time" "Night"]
                                 [[:layers :background] {:image [:images :background :night]}]]}
            :body-color {:cream [[:attribute "Body" "Cream"]
                                 [[:layers :body] {:color [:colors :cream]}]]
                         :grey [[:attribute "Body" "Grey"]
                                [[:layers :body] {:color [:colors :grey]}]]}
            :secondary-color {:red [[:attribute "Markings" "Red"]
                                    [[:layers :secondary] {:color [:colors :red]}]]
                              :blue [[:attribute "Markings" "Blue"]
                                     [[:layers :secondary] {:color [:colors :blue]}]]
                              :green [[:attribute "Markings" "Green"]
                                      [[:layers :secondary] {:color [:colors :green]}]]}
            :eyes {:open [[:attribute "Eyes" "Open"]
                          [[:layers :eyes-outline] {:image [:images :eyes :outline :open]}]
                          [[:layers :eyes-highlights] {:image [:images :eyes :highlights :open]}]
                          [[:layers :eyes-shadows] {:image [:images :eyes :shadows :open]}]
                          [[:layers :eyes] {:image [:images :eyes :color :open]}]]
                   :closed [[:attribute "Eyes" "Closed"]
                            [:attribute "Eye Color" "None"]
                            [[:layers :eyes-outline] {:image [:images :eyes :outline :closed]}]]}
            :eye-color {:red [[:attribute "Eye Color" "Red"]
                              [[:layers :eyes] {:color [:colors :red]}]]
                        :blue [[:attribute "Eye Color" "Blue"]
                               [[:layers :eyes] {:color [:colors :blue]}]]
                        :green [[:attribute "Eye Color" "Green"]
                                [[:layers :eyes] {:color [:colors :green]}]]}
            :gender {:male [[:attribute "Gender" "Male"]]
                     :female [[:attribute "Gender" "Female"]]}}
 :resources {:images {:background {:day "doc/tutorial/res/background/day.png"
                                   :night "doc/tutorial/res/background/night.png"
                                   :sunset "doc/tutorial/res/background/sunset.png"}
                      :body "doc/tutorial/res/body/body.png"
                      :mouth {:smile "doc/tutorial/res/mouth/smile.png"}
                      :eyes {:outline {:open "doc/tutorial/res/eyes/open/outline.png"
                                       :closed "doc/tutorial/res/eyes/closed/outline.png"}
                             :color {:open "doc/tutorial/res/eyes/open/color.png"}
                             :highlights {:open "doc/tutorial/res/eyes/open/highlights.png"}
                             :shadows {:open "doc/tutorial/res/eyes/open/shadows.png"}}
                      :overlay "doc/tutorial/res/overlay/overlay.png"
                      :secondary "doc/tutorial/res/secondary/secondary-color.png"
                      :outline "doc/tutorial/res/outline/outline.png"
                      :shadows "doc/tutorial/res/shadows/shadows.png"
                      :highlights "doc/tutorial/res/highlights/highlights.png"}
             :colors {:cream [255 235 215]
                      :grey [60 50 50]
                      :red [255 175 175]
                      :green [175 255 175]
                      :blue [175 175 255]
                      :highlights [235 235 175]
                      :shadows [30 30 205]}}}
